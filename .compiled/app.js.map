{"version":3,"sources":["../server/app.js"],"names":["app","PORT","INDEX_PATH","adapter","FileSync","db","use","express","urlencoded","static","post","isString","isLength","min","trim","escape","req","res","errors","isEmpty","status","json","array","note_data","body","data","result_message","JSON","stringify","console","log","send","listen"],"mappings":";;AAeA;;;;AAEA;;;;AAEA;;AAEA;;;;AAGA;;;;AAIA;;;;AAEA;AACA;;AATA;;AAJA;AAlBA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AA2BA,IAAMA,MAAM,wBAAZ;;AALA;;AAXA;;AAiBA,IAAMC,OAAO,IAAb;AACA,IAAMC,aAAa,oBAAnB;;AAIA;AACA,IAAMC,UAAU,IAAIC,kBAAJ,CAAa,SAAb,CAAhB;AACA,IAAMC,KAAK,qBAAIF,OAAJ,CAAX;;AAGA,gCAAkBE,EAAlB;;AAGAL,IAAIM,GAAJ,CAAQC,kBAAQC,UAAR,EAAR;;AAEAR,IAAIM,GAAJ,CAAQC,kBAAQE,MAAR,CAAe,KAAf,CAAR;;AAIAT,IAAIU,IAAJ,CAAS,gBAAT,EAA2B;AACvB;AACA,6BAAM,MAAN,EAAcC,QAAd,GAAyBC,QAAzB,CAAkC,EAAEC,KAAK,CAAP,EAAlC,EAA8CC,IAA9C,GAAqDC,MAArD,EAFuB,CAA3B,EAIE,UAACC,GAAD,EAAKC,GAAL,EAAW;;AAET,QAAMC,SAAS,wCAAiBF,GAAjB,CAAf;AACF,QAAI,CAACE,OAAOC,OAAP,EAAL,EAAuB;AACrB,eAAOF,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEH,QAAQA,OAAOI,KAAP,EAAV,EAArB,CAAP;AACD;;AAEC,QAAIC,YAAYP,IAAIQ,IAAJ,CAASC,IAAzB;;AAEA,iCAAepB,EAAf,EAAkBkB,SAAlB;;AAEA,QAAIG,iBAAiB,qCAAoCC,KAAKC,SAAL,CAAeZ,IAAIQ,IAAnB,CAAzD;AACAK,YAAQC,GAAR,CAAYJ,cAAZ;AACAT,QAAIc,IAAJ,CAASL,cAAT;AACH,CAlBD;;AAsBA1B,IAAIgC,MAAJ,CAAW/B,IAAX,EAAgB,YAAI;AAChB4B,YAAQC,GAAR,CAAY,+BAAZ;AACAD,YAAQC,GAAR,4BAAqC7B,IAArC;AACH,CAHD","file":"app.js","sourcesContent":["//jump notes main server \r\n//manages saving notes\r\n//by oran c wisehacker monkey\r\n//20200224\r\n\r\n/*\r\nx web page with text box\r\nx api endpoint\r\nx save to json function\r\n-dockerize\r\n- host\r\nx finish form setup [https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/forms]\r\n- button save\r\n\r\n*/\r\nimport path from \"path\"\r\n//3d party libraries\r\nimport express from \"express\"\r\n//https://expressjs.com/en/starter/hello-world.html\r\nimport { check, validationResult } from \"express-validator\"\r\n\r\nimport low from \"lowdb\"\r\n//https://github.com/typicode/lowdb\r\n\r\nimport FileSync from \"lowdb/adapters/FileSync\"\r\n\r\n\r\n//custom scripts\r\nimport {initalizeDatabase, DabaseSaveNote} from \"./helpers\"\r\n\r\n//express.js setup (web server)\r\n// https://expressjs.com/en/starter/hello-world.html\r\nconst app = express()\r\nconst PORT = 3000\r\nconst INDEX_PATH = \"/../web/index.html\"\r\n\r\n\r\n\r\n//lowdb simple json database setup\r\nconst adapter = new FileSync('db.json')\r\nconst db = low(adapter)\r\n\r\n\r\ninitalizeDatabase(db)\r\n\r\n\r\napp.use(express.urlencoded())\r\n\r\napp.use(express.static('web'))\r\n\r\n\r\n\r\napp.post(\"/v1/note/save/\", [\r\n    // username must be an  email\r\n    check('data').isString().isLength({ min: 1 }).trim().escape()\r\n  ],\r\n  (req,res)=>{\r\n\r\n    const errors = validationResult(req);\r\n  if (!errors.isEmpty()) {\r\n    return res.status(422).json({ errors: errors.array() });\r\n  }\r\n\r\n    let note_data = req.body.data\r\n\r\n    DabaseSaveNote(db,note_data)\r\n\r\n    let result_message = \"Note has been saved to database:\" +JSON.stringify(req.body)\r\n    console.log(result_message)\r\n    res.send(result_message);\r\n})\r\n\r\n\r\n\r\napp.listen(PORT,()=>{\r\n    console.log(\"Jump Notes Server has started\")\r\n    console.log(`Url: http://localhost:${PORT}`)\r\n})\r\n\r\n\r\n\r\n"]}